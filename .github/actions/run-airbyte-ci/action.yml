name: "Run Dagger pipeline"
description: "Runs a given dagger pipeline"
inputs:
  subcommand:
    description: "Subcommand for airbyte-ci"
    required: true
  context:
    description: "CI context (e.g., pull_request, manual)"
    required: true
  github_token:
    description: "GitHub token"
    required: false
  options:
    description: "Options for the subcommand"
    required: false
  production:
    description: "Whether to run in production mode"
    required: false
    default: "False"
  airbyte_ci_binary_url:
    description: "URL to airbyte-ci binary"
    required: false
    default: https://connectors.airbyte.com/airbyte-ci/releases/ubuntu/latest/airbyte-ci
  is_fork:
    description: "Whether the PR is from a fork"
    required: false
    default: "false"
  max_attempts:
    description: "Number of attempts at running the airbyte-ci command"
    required: false
    default: 1
  retry_wait_seconds:
    description: "Number of seconds to wait between retry attempts"
    required: false
    default: 60

runs:
  using: "composite"
  steps:
    - name: Install Java Environment
      id: install-java-environment
      uses: ./.github/actions/install-java-environment
    - name: Install Airbyte CI
      id: install-airbyte-ci
      uses: ./.github/actions/install-airbyte-ci
      with:
        airbyte_ci_binary_url: ${{ inputs.airbyte_ci_binary_url }}
        is_fork: ${{ inputs.is_fork }}
    - name: Run airbyte-ci
      id: run-airbyte-ci
      shell: bash
      env:
        CI: "False"
        # Next environment variables are workflow inputs based and can be set with empty values if the inputs are not required and passed
        CI_CONTEXT: "${{ inputs.context }}"
      run: |
        export PATH="$PATH:/root/.local/bin"
        airbyte-ci --disable-update-check --disable-dagger-run --is-local ${{ inputs.subcommand }}
    - name: Stop Engine
      id: stop-engine
      if: always()
      shell: bash
      run: |
        mapfile -t containers < <(docker ps --filter name="dagger-engine-*" -q)
        if [[ "${#containers[@]}" -gt 0 ]]; then
          # give 5mn to the Dagger Engine to push cache data to Dagger Cloud
          docker stop -t 300 "${containers[@]}";
        fi
